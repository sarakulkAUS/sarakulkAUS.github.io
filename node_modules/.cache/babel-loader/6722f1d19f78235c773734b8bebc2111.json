{"ast":null,"code":"const {\n  ErrorWrapper,\n  createUpdater\n} = require('@adobe/aio-lib-core-errors').AioCoreSDKErrorWrapper;\n\nconst codes = {};\nconst messages = new Map();\n/**\n * Create an Updater for the Error wrapper\n *\n * @ignore\n */\n\nconst Updater = createUpdater( // object that stores the error classes (to be exported)\ncodes, // Map that stores the error strings (to be exported)\nmessages);\n/**\n * Provides a wrapper to easily create classes of a certain name, and values\n *\n * @ignore\n */\n\nconst E = ErrorWrapper( // The class name for your SDK Error. Your Error objects will be these objects\n'AEMHeadlessError', // The name of your SDK. This will be a property in your Error objects\n'AEMHeadless', // the object returned from the CreateUpdater call above\nUpdater // the base class that your Error class is extending. AioCoreSDKError is the default\n\n/* , AioCoreSDKError */\n);\nmodule.exports = {\n  codes,\n  messages\n}; // Commons errors\n\nE('REQUEST_ERROR', 'General Request error: %s.');\nE('RESPONSE_ERROR', 'There was a problem parsing response data: %s.');\nE('API_ERROR', 'There was a problem with your API call: %s.');\nE('INVALID_PARAM', 'There was a problem with required params: %s.'); // NodeJS Errors\n\nE('AUTH_FILE_READ_ERROR', 'There was a problem reading auth file: %s.');\nE('AUTH_FILE_PARSE_ERROR', 'There was a problem parsing auth file: %s.');\nE('EXCHANGE_TOKEN_ERROR', 'There was a problem fetching  exchange token: %s.');","map":{"version":3,"names":["ErrorWrapper","createUpdater","require","AioCoreSDKErrorWrapper","codes","messages","Map","Updater","E","module","exports"],"sources":["C:/sarang/code/spa/react-project/aem-guides-wknd-graphql/react-app/node_modules/@adobe/aem-headless-client-js/src/utils/SDKErrors.js"],"sourcesContent":["const { ErrorWrapper, createUpdater } = require('@adobe/aio-lib-core-errors').AioCoreSDKErrorWrapper\n\nconst codes = {}\nconst messages = new Map()\n\n/**\n * Create an Updater for the Error wrapper\n *\n * @ignore\n */\nconst Updater = createUpdater(\n  // object that stores the error classes (to be exported)\n  codes,\n  // Map that stores the error strings (to be exported)\n  messages\n)\n\n/**\n * Provides a wrapper to easily create classes of a certain name, and values\n *\n * @ignore\n */\nconst E = ErrorWrapper(\n  // The class name for your SDK Error. Your Error objects will be these objects\n  'AEMHeadlessError',\n  // The name of your SDK. This will be a property in your Error objects\n  'AEMHeadless',\n  // the object returned from the CreateUpdater call above\n  Updater\n  // the base class that your Error class is extending. AioCoreSDKError is the default\n  /* , AioCoreSDKError */\n)\n\nmodule.exports = {\n  codes,\n  messages\n}\n\n// Commons errors\nE('REQUEST_ERROR', 'General Request error: %s.')\nE('RESPONSE_ERROR', 'There was a problem parsing response data: %s.')\nE('API_ERROR', 'There was a problem with your API call: %s.')\nE('INVALID_PARAM', 'There was a problem with required params: %s.')\n// NodeJS Errors\nE('AUTH_FILE_READ_ERROR', 'There was a problem reading auth file: %s.')\nE('AUTH_FILE_PARSE_ERROR', 'There was a problem parsing auth file: %s.')\nE('EXCHANGE_TOKEN_ERROR', 'There was a problem fetching  exchange token: %s.')\n"],"mappings":"AAAA,MAAM;EAAEA,YAAF;EAAgBC;AAAhB,IAAkCC,OAAO,CAAC,4BAAD,CAAP,CAAsCC,sBAA9E;;AAEA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,QAAQ,GAAG,IAAIC,GAAJ,EAAjB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAGN,aAAa,EAC3B;AACAG,KAF2B,EAG3B;AACAC,QAJ2B,CAA7B;AAOA;AACA;AACA;AACA;AACA;;AACA,MAAMG,CAAC,GAAGR,YAAY,EACpB;AACA,kBAFoB,EAGpB;AACA,aAJoB,EAKpB;AACAO,OANoB,CAOpB;;AACA;AARoB,CAAtB;AAWAE,MAAM,CAACC,OAAP,GAAiB;EACfN,KADe;EAEfC;AAFe,CAAjB,C,CAKA;;AACAG,CAAC,CAAC,eAAD,EAAkB,4BAAlB,CAAD;AACAA,CAAC,CAAC,gBAAD,EAAmB,gDAAnB,CAAD;AACAA,CAAC,CAAC,WAAD,EAAc,6CAAd,CAAD;AACAA,CAAC,CAAC,eAAD,EAAkB,+CAAlB,CAAD,C,CACA;;AACAA,CAAC,CAAC,sBAAD,EAAyB,4CAAzB,CAAD;AACAA,CAAC,CAAC,uBAAD,EAA0B,4CAA1B,CAAD;AACAA,CAAC,CAAC,sBAAD,EAAyB,mDAAzB,CAAD"},"metadata":{},"sourceType":"script"}