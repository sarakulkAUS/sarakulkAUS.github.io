{"version":3,"sources":["components/Error.js","components/Loading.js","api/headlessClient.js","api/persistedQueries.js","components/aem/AEMResponsiveGrid.js","components/AdventureDetail.js","components/Adventures.js","components/aem/AEMTitle.js","components/aem/AEMText.js","components/aem/AEMImage.js","components/aem/Html.js","components/aem/contentTile.js","components/Home.js","App.js","index.js","images/icon-close.svg","images/icon-loading.svg","images/foxtel.svg"],"names":["Error","className","this","props","errorMessage","Component","REACT_APP_PUBLIC_URI","process","Loading","src","loadingIcon","alt","AEMHeadless","require","REACT_APP_HOST_URI","REACT_APP_GRAPHQL_ENDPOINT","REACT_APP_USE_PROXY","REACT_APP_AUTH_METHOD","REACT_APP_DEV_TOKEN","REACT_APP_BASIC_AUTH_USER","REACT_APP_BASIC_AUTH_PASS","aemHeadlessClient","serviceURL","endpoint","auth","mapErrors","errors","map","error","message","join","getAllAdventures","executePersistedQuery","getAdventuresByActivity","activityType","queryVariables","getAdventureByPath","adventurePath","persistedQueryPath","runPersistedQuery","response","data","undefined","console","toJSON","RESOURCE_TYPE","EditConfig","emptyLabel","isEmpty","cqItemsOrder","length","resourceType","MapTo","ResponsiveGrid","AEMResponsiveGrid","withMappable","AdventureDetailRender","_path","title","primaryImage","activity","adventureType","tripLength","groupSize","difficulty","price","description","itinerary","history","contributor","adventureName","split","pop","onClick","goBack","backIcon","value","displayType","thousandSeparator","prefix","dangerouslySetInnerHTML","__html","html","pagePath","itemPath","NoAdventureFound","to","AdventureDetail","contentFragmentPath","useLocation","pathname","substring","useHistory","useState","setResponse","useEffect","then","currentAdventure","adventureByPath","item","getAdventure","AdventureListItem","Adventures","adventureActivity","adventureList","items","adventure","key","slug","TitleV2IsEmptyFn","TitleV2","AEMTitle","TextV2IsEmptyFn","TextV2","ImageV2IsEmptyFn","ImageV2","HtmlEditConfig","trim","Html","class","ContentTileConfig","contentTile","fileReference","titleText","rteText","buttonLabel","link","width","height","Home","setAdventureActivity","App","logo","path","ModelManager","initializeAsync","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4cd7b8ce.chunk.js","sourcesContent":["/*\r\nCopyright 2020 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\nimport React, {Component} from 'react';\r\n\r\nclass Error extends Component {\r\n\r\n    render() {\r\n        return (<div className=\"error\">\r\n              <span className=\"error-message\">{`Error: ${this.props.errorMessage}`}</span>\r\n          </div>);\r\n    }\r\n}\r\n\r\nexport default Error;","/*\r\nCopyright 2020 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\nimport React, {Component} from 'react';\r\nimport loadingIcon from '../images/icon-loading.svg';\r\n\r\nconst {  REACT_APP_PUBLIC_URI } = process.env;\r\n\r\nclass Loading extends Component {\r\n\r\n    render() {\r\n        return (<div className=\"loading\">\r\n              <img src={REACT_APP_PUBLIC_URI + '/' + loadingIcon} alt=\"Loading...\" />\r\n          </div>);\r\n    }\r\n}\r\n\r\nexport default Loading;","/*\r\nCopyright 2022 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\n\r\n// Use the AEM Headless SDK to make the GraphQL requests\r\nconst { AEMHeadless } = require('@adobe/aem-headless-client-js');\r\n\r\n// environment variable for configuring the headless client\r\nconst {\r\n    REACT_APP_HOST_URI,\r\n    REACT_APP_GRAPHQL_ENDPOINT,\r\n    REACT_APP_USE_PROXY,\r\n    REACT_APP_AUTH_METHOD,\r\n    REACT_APP_DEV_TOKEN,\r\n    REACT_APP_BASIC_AUTH_USER,\r\n    REACT_APP_BASIC_AUTH_PASS\r\n} = process.env;\r\n\r\n// In a production application the serviceURL should be set to the production AEM Publish environment\r\n// In development the serviceURL can be set to '/' which will be a relative proxy is used (see ../authMethods.js) to avoid CORS issues\r\nconst serviceURL = REACT_APP_USE_PROXY === 'true' ? '/' : REACT_APP_HOST_URI;\r\n\r\n// Get authorization based on environment variables\r\n// authorization is not needed when connecting to Publish environments\r\nconst setAuthorization = function () {\r\n    if (REACT_APP_AUTH_METHOD === 'basic') {\r\n        return [REACT_APP_BASIC_AUTH_USER, REACT_APP_BASIC_AUTH_PASS];\r\n    } else if (REACT_APP_AUTH_METHOD === 'dev-token') {\r\n        return REACT_APP_DEV_TOKEN;\r\n    } else {\r\n        // no authentication set\r\n        return;\r\n    }\r\n}\r\nexport const aemHeadlessClient = new AEMHeadless({\r\n    serviceURL: serviceURL,\r\n    endpoint: REACT_APP_GRAPHQL_ENDPOINT,\r\n    auth: setAuthorization()\r\n});\r\n\r\n/**\r\n * concatenate error messages into a single string.\r\n * @param {*} errors\r\n */\r\nexport const mapErrors = function (errors) {\r\n    return errors.map((error) => error.message).join(\",\");\r\n}","/*\r\nCopyright 2022 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\n\r\n/**\r\n * persistedQueries.js - provides a wrapper utility of persisted queries that are expected to be available on the AEM environment\r\n */\r\n import { aemHeadlessClient , mapErrors} from \"./headlessClient\";\r\n\r\n /**\r\n  * Queries a list of all Adventures using the persisted path \"wknd-app/adventures-all\"\r\n  * @returns {data, errors}\r\n  */\r\n export const getAllAdventures = async function() {\r\n     return executePersistedQuery('wknd-app/adventures-all');\r\n }\r\n \r\n /**\r\n  * Filters a list of adventures by activity \r\n  * using the persisted path 'wknd-app/adventures-by-activity'\r\n  * @param {*} activityType \r\n  * @returns \r\n  */\r\n export const getAdventuresByActivity = async function(activityType) {\r\n     const queryVariables = { 'activity': activityType }; // expected query variables\r\n     return executePersistedQuery('wknd-app/adventures-by-activity', queryVariables);\r\n }\r\n \r\n /**\r\n  * Queries a single adventure based on a path to a content fragment\r\n  * uses persisted path 'wknd-app/adventures-by-path'\r\n  * @param {*} adventurePath \r\n  * @returns \r\n  */\r\n export const getAdventureByPath = async function(adventurePath) {\r\n     const queryVariables = {'adventurePath': adventurePath};\r\n     return executePersistedQuery('wknd-app/adventure-by-path', queryVariables);\r\n }\r\n \r\n /**\r\n  * Uses the AEM Headless SDK to execute a query besed on a persistedQueryPath and optional query variables\r\n  * @param {*} persistedQueryPath \r\n  * @param {*} queryVariables \r\n  * @returns \r\n  */\r\n  const executePersistedQuery = async function(persistedQueryPath, queryVariables) {\r\n \r\n     let data;\r\n     let errors;\r\n \r\n     try {\r\n         // AEM GraphQL queries are asynchronous, either await their return or use Promise-based .then(..) { ... } syntax\r\n         const response = await aemHeadlessClient.runPersistedQuery(persistedQueryPath, queryVariables);\r\n         // The GraphQL data is stored on the response's data field\r\n         data = response.data;\r\n         errors = response.errors ? mapErrors(response.errors) : undefined;\r\n     } catch (e) {\r\n         console.error(e.toJSON());\r\n         errors = e;\r\n     }\r\n \r\n     return {data, errors}; \r\n }","// Import the withMappable API provided bu the AEM SPA Editor JS SDK\r\nimport { withMappable, MapTo } from '@adobe/aem-react-editable-components';\r\n\r\n// Import the base ResponsiveGrid component\r\nimport { ResponsiveGrid } from \"@adobe/aem-react-editable-components\";\r\n\r\n// The sling:resourceType for which this Core Component is registered with in AEM\r\nconst RESOURCE_TYPE = \"wcm/foundation/components/responsivegrid\";\r\n\r\n// Create an EditConfig to allow the AEM SPA Editor to properly render the component in the Editor's context\r\nconst EditConfig = {\r\n    emptyLabel: \"Layout Container\",  // The component placeholder in AEM SPA Editor\r\n    isEmpty: function(props) { \r\n        return props.cqItemsOrder == null || props.cqItemsOrder.length === 0;\r\n    },                              // The function to determine if this component has been authored\r\n    resourceType: RESOURCE_TYPE     // The sling:resourceType this SPA component is mapped to\r\n};\r\n\r\n// MapTo allows the AEM SPA Editor JS SDK to dynamically render components added to SPA Editor Containers\r\nMapTo(RESOURCE_TYPE)(ResponsiveGrid, EditConfig);\r\n\r\n// withMappable allows the component to be hardcoded into the SPA; <AEMResponsiveGrid .../>\r\nconst AEMResponsiveGrid = withMappable(ResponsiveGrid, EditConfig);\r\n\r\nexport default AEMResponsiveGrid;","/*\r\nCopyright 2022 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport backIcon from '../images/icon-close.svg';\r\nimport Error from './Error';\r\nimport Loading from './Loading';\r\nimport { mapJsonRichText } from '../utils/renderRichText';\r\nimport './AdventureDetail.scss';\r\nimport { getAdventureByPath } from '../api/persistedQueries';\r\nimport AEMResponsiveGrid from './aem/AEMResponsiveGrid';\r\n\r\nconst { REACT_APP_PUBLIC_URI } = process.env;\r\n\r\nfunction AdventureDetail() {\r\n\r\n    const location = useLocation();\r\n\r\n    //parse the content fragment from the url location\r\n    const contentFragmentPath = location.pathname.substring(`/adventure:`.length);\r\n\r\n    // useHistory as react-router-dom is still on old version to avoid conflict with aem-core-components-react-XX upstream dependencies\r\n    const history = useHistory();\r\n    const [response, setResponse] = useState();\r\n\r\n    useEffect(() => {\r\n        // set response to null on change\r\n        setResponse();\r\n\r\n        // execute persisted query based on the adventure slug\r\n        getAdventureByPath(contentFragmentPath)\r\n            .then(response => setResponse(response));\r\n    }, [contentFragmentPath]);\r\n\r\n\r\n    //If query response is null then return a loading icon...\r\n    if (!response) return <Loading />;\r\n\r\n    //If there is an error with the GraphQL query\r\n    if (response && response.errors) return <Error errorMessage={response.errors} />;\r\n\r\n    //Set adventure properties variable based on graphQL response\r\n    const currentAdventure = getAdventure(response);\r\n\r\n    //Must have title, path, and image\r\n    if (!currentAdventure) {\r\n        return <NoAdventureFound />;\r\n    }\r\n\r\n    return (\r\n        <AdventureDetailRender {...currentAdventure}  history={history}/>\r\n    );\r\n}\r\n\r\nfunction AdventureDetailRender({ _path,\r\n    title,\r\n    primaryImage,\r\n    activity,\r\n    adventureType,\r\n    tripLength,\r\n    groupSize,\r\n    difficulty,\r\n    price,\r\n    description,\r\n    itinerary,\r\n    contributor, history }) {\r\n\r\n\r\n    // Get the last segment of the Adventure Content Fragment path to used to generate the pagePath for the AEMResponsiveGrid\r\n    const adventureName = _path.split('/').pop();\r\n    return (<div className=\"adventure-detail\">\r\n        <button className=\"adventure-detail-close-button\" onClick={() => history.goBack()}>\r\n            <img className=\"Backbutton-icon\" src={REACT_APP_PUBLIC_URI + '/' + backIcon} alt=\"Return\" />\r\n        </button>\r\n        <h1 className=\"adventure-detail-title\">{title}</h1>\r\n        <div className=\"adventure-detail-info\">\r\n            <div className=\"adventure-detail-info-label\">Activity</div>\r\n            <div className=\"adventure-detail-info-description\">{activity}</div>\r\n            <div className=\"adventure-detail-info-label\">Type</div>\r\n            <div className=\"adventure-detail-info-description\">{adventureType}</div>\r\n            <div className=\"adventure-detail-info-label\">Trip Length</div>\r\n            <div className=\"adventure-detail-info-description\">{tripLength}</div>\r\n            <div className=\"adventure-detail-info-label\">Group Size</div>\r\n            <div className=\"adventure-detail-info-description\">{groupSize}</div>\r\n            <div className=\"adventure-detail-info-label\">Difficulty</div>\r\n            <div className=\"adventure-detail-info-description\">{difficulty}</div>\r\n            <div className=\"adventure-detail-info-label\">Price</div>\r\n            <div className=\"adventure-detail-info-description\">\r\n                <CurrencyFormat value={price} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n            </div>\r\n        </div>\r\n        <div className=\"adventure-detail-content\">\r\n            <img className=\"adventure-detail-primaryimage\"\r\n                src={primaryImage._path} alt={title} />\r\n            <div dangerouslySetInnerHTML={{ __html: description.html }}></div>\r\n\r\n            <AEMResponsiveGrid\r\n                pagePath={`/content/wknd-app/us/en/home/adventure/${adventureName}`}\r\n                itemPath=\"root/responsivegrid\" />\r\n\r\n            <h2>Itinerary</h2>\r\n            <hr />\r\n\r\n            <div className=\"adventure-detail-itinerary\"\r\n                dangerouslySetInnerHTML={{ __html: itinerary.html }}></div>\r\n        </div>\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nfunction NoAdventureFound() {\r\n    return (\r\n        <div className=\"adventure-detail\">\r\n            <Link className=\"adventure-detail-close-button\" to={\"/\"}>\r\n                <img className=\"Backbutton-icon\" src={REACT_APP_PUBLIC_URI + '/' + backIcon} alt=\"Return\" />\r\n            </Link>\r\n            <Error errorMessage=\"Missing data, adventure could not be rendered.\" />\r\n        </div>\r\n    );\r\n}\r\n\r\n/**\r\n * Helper function to get the first adventure from the response\r\n * @param {*} response \r\n */\r\nfunction getAdventure(response) {\r\n\r\n    if (response && response.data && response.data.adventureByPath && response.data.adventureByPath.item) {\r\n        return response.data.adventureByPath.item;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport default AdventureDetail;\r\n","/*\r\nCopyright 2022 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\nimport React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport {getAllAdventures, getAdventuresByActivity} from '../api/persistedQueries';\r\nimport Error from './Error';\r\nimport Loading from './Loading';\r\nimport './Adventures.scss';\r\n\r\nfunction Adventures({adventureActivity}) {\r\n    \r\n    const [response, setResponse] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        // set response to null while fetching the new data (prompts loading icon)\r\n        setResponse();\r\n\r\n        // if an activity is set (i.e \"Camping\", \"Hiking\"...)\r\n        if(adventureActivity && adventureActivity !== '') {\r\n            // run a filter query to get adventures based on the activity\r\n            getAdventuresByActivity(adventureActivity)\r\n                .then(response => setResponse(response));\r\n        }\r\n        else {\r\n            // Otherwise get all the adventures data (unfiltered)\r\n            getAllAdventures()\r\n                .then(response => setResponse(response));\r\n        }\r\n      }, [adventureActivity])\r\n\r\n    //If response is null then return a loading state...\r\n    if(!response) return <Loading />;\r\n\r\n    //If there is an error with the GraphQL query\r\n    if(response && response.errors) return <Error errorMessage={response.errors} />;\r\n    \r\n    return (\r\n        <div className=\"adventures\">\r\n          <ul className=\"adventure-items\">\r\n            {\r\n                //Iterate over the returned data items from the query\r\n                response.data.adventureList.items.map((adventure) => {\r\n                    return (\r\n                        <AdventureListItem key={adventure.slug} {...adventure} />\r\n                    );\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Render individual Adventure item\r\nfunction AdventureListItem({title, _path, primaryImage, tripLength, price}) {\r\n\r\n  //Must have title, path, and image\r\n  if(!title || !_path || !primaryImage ) {\r\n    return null;\r\n  }\r\n  return (\r\n        <li className=\"adventure-item\">\r\n          <Link to={`/adventure:${_path}`}>\r\n            <img className=\"adventure-item-image\" src={primaryImage._path} \r\n                 alt={title}/>\r\n          </Link>\r\n          <div className=\"adventure-item-length-price\">\r\n            <div className=\"adventure-item-length\">{tripLength}</div>\r\n            <div className=\"adventure-item-price\">\r\n                <CurrencyFormat value={price} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n            </div>\r\n          </div>\r\n          <div className=\"adventure-item-title\">{title}</div>\r\n      </li>\r\n      );\r\n}\r\n\r\nexport default Adventures;\r\n"," // Import the withMappable API provided bu the AEM SPA Editor JS SDK\r\n import { withMappable, MapTo } from '@adobe/aem-react-editable-components';\r\n\r\n // Import the AEM React Core Components' Title component implementation and it's Empty Function \r\n import { TitleV2, TitleV2IsEmptyFn } from \"@adobe/aem-core-components-react-base\";\r\n\r\n // The sling:resourceType for which this Core Component is registered with in AEM\r\n const RESOURCE_TYPE = \"wknd-app/components/title\";\r\n\r\n // Create an EditConfig to allow the AEM SPA Editor to properly render the component in the Editor's context\r\n const EditConfig = {    \r\n     emptyLabel: \"Title\",  // The component placeholder in AEM SPA Editor\r\n     isEmpty: TitleV2IsEmptyFn, // The function to determine if this component has been authored\r\n     resourceType: RESOURCE_TYPE // The sling:resourceType this component is mapped to\r\n };\r\n\r\n // MapTo allows the AEM SPA Editor JS SDK to dynamically render components added to SPA Editor Containers\r\n MapTo(RESOURCE_TYPE)(TitleV2, EditConfig);\r\n\r\n // withMappable allows the component to be hardcoded into the SPA; <AEMTitle .../>\r\nconst AEMTitle = withMappable(TitleV2, EditConfig);\r\n\r\nexport default AEMTitle;","import { withMappable, MapTo } from '@adobe/aem-react-editable-components';\r\nimport { TextV2, TextV2IsEmptyFn } from \"@adobe/aem-core-components-react-base\";\r\n\r\nconst RESOURCE_TYPE = \"wknd-app/components/text\";\r\n\r\nconst EditConfig = {    \r\n    emptyLabel: \"Text\",\r\n    isEmpty: TextV2IsEmptyFn,\r\n    resourceType: RESOURCE_TYPE\r\n};\r\n\r\nMapTo(RESOURCE_TYPE)(TextV2, EditConfig);\r\n\r\nconst AEMText = withMappable(TextV2, EditConfig);\r\n\r\nexport default AEMText;","import { withMappable, MapTo } from '@adobe/aem-react-editable-components';\r\nimport { ImageV2, ImageV2IsEmptyFn } from \"@adobe/aem-core-components-react-base\";\r\n\r\nimport './AEMImage.scss';\r\n\r\nconst RESOURCE_TYPE = \"wknd-app/components/image\";\r\n\r\nconst EditConfig = {    \r\n    emptyLabel: \"Image\",\r\n    isEmpty: ImageV2IsEmptyFn,\r\n    resourceType: RESOURCE_TYPE\r\n};\r\n\r\nMapTo(RESOURCE_TYPE)(ImageV2, EditConfig);\r\n\r\nconst AEMImage = withMappable(ImageV2, EditConfig);\r\n\r\nexport default AEMImage;","import React from 'react';\r\nimport { withMappable, MapTo } from '@adobe/aem-react-editable-components';\r\n\r\nconst RESOURCE_TYPE = 'wknd-app/components/htmlContainer';\r\n\r\nexport const HtmlEditConfig = {\r\n    // Empty component placeholder label\r\n    emptyLabel:'Edit HTML',\r\n    isEmpty:function(props) {\r\n       return !props || !props.html || props.html.trim().length < 1;\r\n    },\r\n    // resourcetype of the AEM counterpart component\r\n    resourceType: RESOURCE_TYPE\r\n};\r\n\r\nconst Html = ({ html }) => {\r\n\r\n   return (\r\n\r\n   <div class=\"AEM-html\" dangerouslySetInnerHTML={{ __html: html }}></div>\r\n   );\r\n};\r\n\r\n\r\nexport default Html;\r\n\r\nMapTo(RESOURCE_TYPE)(Html,HtmlEditConfig);\r\nexport const AEMHtml = withMappable(Html, HtmlEditConfig);\r\n","import React from 'react';\r\nimport {withMappable , MapTo } from '@adobe/aem-react-editable-components';\r\n\r\nconst RESOURCE_TYPE = \"wknd-app/components/contenttile\";\r\n\r\nexport const ContentTileConfig = {\r\n    emptyLabel : 'Edit Content Tile',\r\n    isEmpty:function(props){\r\n     return !props;\r\n    },\r\n\r\n    resourceType : RESOURCE_TYPE\r\n};\r\n\r\nconst contentTile = ({fileReference, titleText, rteText, buttonLabel, link}) => {\r\n\r\n    return (<div className=\"aemContentTile\">\r\n                <h3>{titleText}</h3>\r\n                 <div class=\"img\">\r\n                      <img src={fileReference} width=\"100%\" height=\"300px\" />\r\n                 </div>\r\n\r\n                <hr/>\r\n                <div class=\"desc\">\r\n                    <div dangerouslySetInnerHTML={{ __html: rteText }}></div>\r\n                </div>\r\n                <div class=\"btn-label\">\r\n                    <button link={link}>{buttonLabel}</button>\r\n                </div>\r\n                <hr/>\r\n    </div>);\r\n};\r\n\r\nexport default contentTile;\r\n\r\nMapTo(RESOURCE_TYPE)(contentTile,ContentTileConfig);\r\nexport const AEMContentTile = withMappable(contentTile,ContentTileConfig);","/*\r\nCopyright 2022 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\n\r\nimport React, {useState} from 'react';\r\nimport Adventures from './Adventures';\r\nimport AEMResponsiveGrid from './aem/AEMResponsiveGrid';\r\nimport AEMTitle from './aem/AEMTitle';\r\nimport AEMText from './aem/AEMText';\r\nimport AEMImage from './aem/AEMImage';\r\nimport AEMHtml from './aem/Html'\r\nimport AEMContentTile from './aem/contentTile'\r\n\r\n\r\n\r\n/***\r\n * Displays a grid of current adventures\r\n */\r\nfunction Home(){\r\n\r\n    const[adventureActivity, setAdventureActivity] = useState('');\r\n\r\n    return(\r\n        <div className=\"Home\">\r\n             <AEMResponsiveGrid\r\n                  pagePath='/content/wknd-app/us/en/home'\r\n                  itemPath='root/responsivegrid'/>\r\n              <AEMTitle\r\n                   pagePath='/content/wknd-app/us/en/home'\r\n                   itemPath='root/title'/>\r\n              <AEMHtml\r\n                pagePath='/content/wknd-app/us/en/home'\r\n                itemPath='root/htmlContainer'/>\r\n              <AEMContentTile\r\n                 pagePath='/content/wknd-app/us/en/home'\r\n                 itemPath='root/contenttile'/>\r\n\r\n\r\n\r\n             <div className=\"adventure-nav\">\r\n               <button onClick={()=> setAdventureActivity('')}>All</button>\r\n               <button onClick={()=> setAdventureActivity('Camping')}>Camping</button>\r\n               <button onClick={()=> setAdventureActivity('Surfing')}>Surfing</button>\r\n             </div>\r\n\r\n           <Adventures adventureActivity={adventureActivity}/>\r\n  </div>\r\n    );\r\n}\r\n\r\nexport default Home;","/*\r\nCopyright 2020 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport AdventureDetail from './components/AdventureDetail';\r\nimport Home from './components/Home';\r\nimport logo from './images/foxtel.svg';\r\n\r\nimport './App.scss';\r\n\r\nconst { REACT_APP_PUBLIC_URI } = process.env;\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <header>\r\n          <Link to={\"/\"}>\r\n            <img src={logo} className=\"logos\" alt=\"Foxtel Logo\" />\r\n          </Link>\r\n          <hr />\r\n        </header>\r\n        <Switch>\r\n          <Route path='/adventure:path'>\r\n            <AdventureDetail />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","/*\r\nCopyright 2020 Adobe\r\nAll Rights Reserved.\r\n\r\nNOTICE: Adobe permits you to use, modify, and distribute this file in\r\naccordance with the terms of the Adobe license agreement accompanying\r\nit.\r\n*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { ModelManager } from \"@adobe/aem-spa-page-model-manager\";\r\n\r\n// Initialize the ModelManager before invoking ReactDOM.render(...).\r\nModelManager.initializeAsync();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/icon-close.f227c489.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-loading.c507a81b.svg\";","module.exports = __webpack_public_path__ + \"static/media/foxtel.17260a1f.svg\";"],"sourceRoot":""}